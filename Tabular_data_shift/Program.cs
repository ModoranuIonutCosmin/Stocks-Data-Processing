
// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using Microsoft.ML;

namespace Tabular_data_shift
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create single instance of sample data from first line of dataset for model input
            MLModel1.ModelInput sampleData = new MLModel1.ModelInput()
            {
                Features = (new List<float>(){1159.75f, 1162.5f, 1163.75f, 1165f, 1167f, 1170f, 1169f, 1167.02f, 1169.84f, 1167.91f, 1169.85f, 1170.91f, 1170f, 1169.75f, 1168f, 1168.2f, 1167.12f, 1166.31f, 1169.78f, 1168f, 1168.21f, 1168.8f, 1169.48f, 1169.48f, 1169f, 1167.52f, 1167.37f, 1165f, 1167.43f, 1166.75f, 1167.8f, 1162.3f, 1163f, 1161.02f, 1162.42f, 1163.12f, 1161.55f, 1161.9f, 1161.45f, 1163.02f, 1164f, 1165.4f, 1164.39f, 1164.5f, 1165.94f, 1166.35f, 1167.5f, 1168.74f, 1165.75f, 1168f, 1167.14f, 1164f, 1166f, 1164f, 1163f, 1174.37f, 1181.495f, 1192.21f, 1192.19f, 1185.57f, 1188.74f, 1184.421f, 1188.414f, 1193.09f, 1187.948f, 1188.5f, 1193.222f, 1197.36f, 1200.39f, 1189.07f, 1189.115f, 1192.2f, 1190.547f, 1183.355f, 1182.465f, 1186f, 1188.24f, 1180.96f, 1169.485f, 1144.71f, 1149.93f, 1148.56f, 1158.04f, 1157.36f, 1167.11f, 1170.72f, 1171.9f, 1176.227f, 1174.303f, 1174.39f, 1170.925f, 1174.42f, 1174.58f, 1184.186f, 1180.2f, 1183.315f, 1177.68f, 1179.764f, 1174.03f, 1167.11f, 1174.7f, 1169.47f, 1173.95f, 1170.76f, 1171.005f, 1171.045f, 1171.28f, 1174.13f, 1179.441f, 1184.32f, 1187.73f, 1186.33f, 1184.066f, 1183.73f, 1178.5f, 1182.54f, 1176.06f, 1168.986f, 1158.909f, 1157.89f, 1156.1f, 1159f, 1158.97f, 1161.2f, 1163.01f, 1162.21f, 1162.5f, 1160.3f, 1163.99f, 1162.2f, 1163f, 1160.83f, 1160.3f, 1159.55f, 1159f, 1158f, 1157.5f, 1158.33f, 1155.12f, 1156f, 1157f, 1157f, 1157.53f, 1157.25f, 1156.01f, 1155.49f, 1155.02f, 1154f, 1155.09f, 1157.3f, 1155.7f, 1155.7f, 1155.8f, 1157.38f, 1158.92f, 1161.07f, 1160.2f, 1161.5f, 1164f, 1161.86f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1161.06f, 1143f, 1144.98f, 1144.98f, 1153.54f, 1150f, 1150f, 1153f, 1153f, 1151f, 1144f, 1148f, 1148f, 1149.75f, 1149f, 1151f, 1151.25f, 1150.16f, 1150f, 1150f, 1150f, 1150f, 1148.7f, 1148.7f, 1149f, 1152f, 1152f, 1152f, 1161f, 1164.36f, 1164.01f, 1170.2f, 1170.96f, 1176f, 1174f, 1170f, 1170f, 1172.25f, 1172.5f, 1170f, 1169.27f, 1170.4f, 1170f, 1170.074f, 1174f, 1174f, 1174.25f, 1174f, 1175f, 1174.6f, 1170.6f, 1173.9f, 1171.5f, 1170.43f, 1170.72f, 1167.77f, 1159.35f, 1173.692f, 1178.44f, 1172.447f, 1166.52f, 1160.502f, 1154.6f, 1154.55f, 1147.1f, 1146f, 1149f, 1141.5f, 1141.97f, 1128.295f, 1120.12f, 1120.833f, 1125f, 1131.99f, 1122.145f, 1127f, 1127.86f, 1132f, 1127.01f, 1125.403f, 1124.57f, 1118.33f, 1124.49f, 1124.219f, 1124.558f, 1119.282f, 1118.903f, 1118f, 1115.7f, 1114.18f, 1106.96f, 1105.33f, 1097.358f, 1095.65f, 1085.88f, 1077.145f, 1085.49f, 1074.893f, 1069.67f, 1084.151f, 1082.229f, 1077.02f, 1083.925f, 1072.75f, 1068.98f, 1070f, 1069.92f, 1073.72f, 1077.72f, 1084.51f, 1087.092f, 1086.745f, 1089.31f, 1095.69f, 1092.38f, 1092.31f, 1095.507f, 1108.472f, 1106.55f, 1114.15f, 1109.34f, 1106.19f, 1106.16f, 1106.19f, 1105.32f, 1106f, 1107.85f, 1109.99f, 1111.45f, 1111.47f, 1112.68f, 1111.3f, 1108f, 1110f, 1111.11f, 1111.8f, 1111.32f, 1110.85f, 1110.35f, 1111f, 1110.7f, 1110f, 1109f, 1110.9f, 1111f, 1110.56f, 1110.02f, 1110.16f, 1110f, 1109.2f, 1109.5f, 1110f, 1110.8f, 1109f, 1108.02f, 1106.89f, 1106.72f, 1105.9f, 1101.34f, 1103f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1100.8f, 1111.07f, 1111.93f, 1117.34f, 1117f, 1118.5f, 1119.5f, 1116.41f, 1114.56f, 1108.52f, 1106.99f, 1107.96f, 1111f, 1106f, 1106.07f, 1109.99f, 1105.48f, 1096.88f, 1100.98f, 1096f, 1095.5f, 1094f, 1093.7f, 1093.7f, 1097.85f, 1098f, 1098f, 1098f, 1102.47f, 1104.33f, 1106.89f, 1100f, 1094.2f, 1097.21f, 1099f, 1099f, 1097f, 1096.8f, 1098f, 1096f, 1093f, 1094f, 1092.03f, 1093f, 1089.98f, 1087.9f, 1085.5f, 1087.25f, 1080.8f, 1082.03f, 1080f, 1078.15f, 1074.174f, 1077.573f, 1074.54f, 1076f, 1073.375f, 1071.77f, 1070.46f, 1083.72f, 1093.18f, 1107.05f, 1116.04f, 1101.71f, 1101.256f, 1114.32f, 1111.369f, 1118.32f, 1116.355f, 1110.16f, 1111.12f, 1110.76f, 1106.08f, 1112.635f, 1122.715f, 1123.53f, 1125.12f, 1121.07f, 1119.065f, 1121.4f, 1119.3f, 1117.66f, 1117.16f, 1118.603f, 1116.25f, 1113.76f, 1113.361f, 1116.01f, 1116.49f, 1121.21f, 1120.369f, 1119.555f, 1120.46f, 1121.445f, 1119.55f, 1121f, 1124.74f, 1125.08f, 1124.61f, 1128.69f, 1127.29f, 1125.953f, 1125.32f, 1115.594f, 1120.92f, 1123.032f, 1123.353f, 1122.895f, 1127.92f, 1127.5f, 1125.565f, 1126.91f, 1127.88f, 1128.45f, 1127.8f, 1127.38f, 1127.17f, 1119.31f, 1119.33f, 1114.445f, 1115.18f, 1116f, 1115.5f, 1113.77f, 1115.5f, 1116f, 1115.49f, 1114f, 1115.4f, 1115.45f, 1115.68f, 1115.83f, 1116.45f, 1116f, 1116f, 1116f, 1115.8f, 1116.3f, 1120f, 1119f, 1122.96f, 1121.12f, 1121.12f, 1116.69f, 1118.69f, 1117.61f, 1116.9f, 1116.75f, 1117f, 1117f, 1117.02f, 1117.5f, 1117f, 1117.05f, 1117.38f, 1117.5f, 1118f, 1117.26f, 1117.79f, 1118f, 1117.5f, 1078f, 1077.58f, 1075.32f, 1074.98f, 1073.15f, 1072f, 1074.3f, 1080.36f, 1083.49f, 1085f, 1082.49f, 1083.9f, 1083.66f, 1080.79f, 1084.51f, 1081.62f, 1082.17f, 1082f, 1080.67f, 1081f, 1084f, 1085.12f, 1085.12f, 1087f, 1086.22f, 1086.14f, 1084.65f, 1085f, 1085f, 1086f, 1096.5f, 1097f, 1095.69f, 1096.99f, 1095f, 1096.58f, 1093f, 1091.3f, 1090f, 1093.41f, 1090f, 1090.204f, 1090f, 1091.25f, 1090.884f, 1090.98f, 1090.25f, 1088f, 1083.1f, 1084f, 1085.99f, 1094.29f, 1091f, 1090f, 1099.05f, 1098.77f, 1086f, 1087.65f, 1085.275f, 1093.65f, 1090.5f, 1090.85f, 1091.017f, 1097.861f, 1102.45f, 1103f, 1097.709f, 1099.5f, 1103.51f, 1100.158f, 1098.31f, 1094.435f, 1091.59f, 1087.87f, 1093.175f, 1094.87f, 1094.89f, 1092.265f, 1090.79f, 1093.9f, 1097.2f, 1096.4f, 1096.3f, 1089.25f, 1091.775f, 1091.43f, 1086.79f, 1087.06f, 1082.99f, 1081.79f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1081.92f, 1080.01f, 1080.59f, 1080.1f, 1080.1f, 1080f, 1080.24f, 1080.24f, 1080.49f, 1080.95f, 1080f, 1108f, 1110f, 1111.33f, 1110.9f, 1106.83f, 1104f, 1105f, 1102.81f, 1103f, 1101.35f, 1104f, 1103.73f, 1103.73f, 1104.99f, 1104.31f, 1104.31f, 1104.89f, 1104.89f, 1104.89f, 1103f, 1105f, 1103f, 1103.11f, 1101.99f, 1101.99f, 1100.58f, 1101.5f, 1102f, 1100f, 1101.2f, 1097f, 1095f, 1094f, 1095.5f, 1095f, 1097.38f, 1097f, 1099.92f, 1101f, 1101.03f, 1097.5f, 1098.31f, 1099.65f, 1099.87f, 1099f, 1099.8f, 1101f, 1102f, 1103.1f, 1103f, 1104f, 1103.6f, 1102.75f, 1103.5f, 1100.77f, 1111.28f, 1126.45f, 1124.155f, 1129.74f, 1137.615f, 1135.91f, 1135.99f, 1129.41f, 1127.59f, 1124.255f, 1131.125f, 1123f, 1128f, 1127.5f, 1133.08f, 1131.45f, 1136.02f, 1135.256f, 1135.741f, 1133.4f, 1133.884f, 1133.04f, 1131.79f, 1134.5f, 1134.805f, 1134.49f, 1133.113f, 1132.53f, 1134.49f, 1132.465f, 1132.96f, 1134.858f, 1139f, 1138.82f, 1140.65f, 1140.82f, 1140.1f, 1132.065f, 1128.422f, 1131.74f, 1128.6f, 1124.73f, 1125.53f, 1126.09f, 1128.765f, 1126.66f, 1126.5f, 1124.538f, 1125f, 1125.895f, 1125.366f, 1131.418f, 1128.74f, 1127.77f, 1128.66f, 1126.98f, 1129.59f, 1132.57f, 1132.53f, 1133.65f, 1133.835f, 1133.874f, 1131.7f, 1131.05f, 1136.98f, 1136.55f, 1137.7f, 1138.5f, 1139.5f, 1139f, 1139.06f, 1139.69f, 1136.99f, 1136.02f, 1138f, 1138f, 1137f, 1136.07f, 1136.06f, 1137f, 1137f, 1136.8f, 1136.8f, 1137.69f, 1136.8f, 1138f, 1139f, 1138.75f, 1140.4f, 1141.5f, 1139f, 1141f, 1140.62f, 1140f, 1140.97f, 1140.31f, 1140.3f, 1139.22f, 1138.6f, 1138.15f, 1138.15f, 1140.25f, 1141.15f, 1141.94f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1141.97f, 1122f, 1121.26f, 1125f, 1123.85f, 1126.79f, 1126f, 1125.09f, 1125f, 1128.87f, 1130f, 1131f, 1131f, 1131f, 1129.52f, 1128f, 1128f, 1129.53f, 1128f, 1129.7f, 1129.91f, 1130.03f, 1130.03f, 1129.41f, 1129f, 1129.89f, 1129.25f, 1128.5f, 1129.98f, 1129.01f, 1128.99f, 1131.71f, 1130.89f, 1131.2f, 1131.85f, 1132.5f, 1131.51f, 1129.5f, 1129.79f, 1130f, 1130f, 1129.7f, 1128.6f, 1128f, 1128.31f, 1128.5f, 1126f, 1129.53f, 1128.5f, 1130f, 1134.98f, 1137.99f, 1141.33f, 1142f, 1141f, 1144.09f, 1153.37f, 1155.38f, 1159.4f, 1160.247f, 1165.852f, 1162.25f, 1162.133f, 1163.81f, 1156.76f, 1162.87f, 1160.88f, 1160.8f, 1154.365f, 1145.673f, 1133.75f, 1141.685f, 1138.76f, 1138.79f, 1128.77f, 1131.2f, 1130.505f, 1127.346f, 1119.05f, 1120.205f, 1124.98f, 1122.574f, 1120.28f, 1127.52f, 1127.745f, 1131.315f, 1137.99f, 1137.577f, 1135.91f, 1136.61f, 1131.74f, 1131.47f, 1128.65f, 1129.342f, 1129.625f, 1126.495f, 1132f, 1130.9f, 1133.89f, 1137.19f, 1140.5f, 1135.9f, 1140.165f, 1137f, 1142.233f, 1138.52f, 1139.32f, 1137.47f, 1133.8f, 1133.677f, 1138f, 1139.62f, 1138.245f, 1137.78f, 1138.663f, 1133.55f, 1136.64f, 1136.26f, 1139.059f, 1139.752f, 1144.92f, 1144.76f, 1144.45f, 1146f, 1146.01f, 1144.95f, 1145.4f, 1145.25f, 1145.43f, 1148f, 1147f, 1147.01f, 1147.17f, 1147.28f, 1146.5f, 1146.5f, 1145.55f, 1145.18f, 1146.5f, 1146.5f, 1146.5f, 1149f, 1148f, 1148.2f, 1147.25f, 1148.7f, 1149.3f, 1148.5f, 1148.33f, 1148.33f, 1147.5f, 1148.04f, 1146.2f, 1145.16f, 1146.27f, 1146.85f, 1145.75f, 1146.01f, 1146f, 1145.6f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1145.01f, 1160.44f, 1161.6f, 1161.12f, 1161f, 1159f, 1161.5f, 1162f, 1163f, 1162f, 1161.5f, 1163.62f, 1163.6f, 1162.06f, 1162.06f, 1162.22f, 1162.22f, 1162.91f, 1161.82f, 1161.82f, 1161.8f, 1158.34f, 1160.1f, 1160.1f, 1159.05f, 1160f, 1161.97f, 1161.97f, 1161.8f, 1161.8f, 1162f, 1161.84f, 1162.2f, 1165.4f, 1166.99f, 1166.96f, 1165.5f, 1164.58f, 1162.95f, 1166f, 1166.73f, 1165.8f, 1164.53f, 1165f, 1163f, 1165f, 1166.1f, 1165.5f, 1163f, 1163f, 1163.91f, 1164f, 1164f, 1163.95f, 1162.6f, 1160.63f, 1164.209f, 1158.275f, 1163.6f, 1163.84f, 1160.448f, 1162.31f, 1161.615f, 1158.78f, 1151.78f, 1149.6f, 1153.524f, 1152.9f, 1153.53f, 1158.238f, 1156.58f, 1156.25f, 1161.857f, 1161.02f, 1157.815f, 1156.78f, 1156.03f, 1153.86f, 1153.53f, 1150.2f, 1147.56f, 1150.3f, 1147.59f, 1151.01f, 1149.386f, 1149f, 1152f, 1152.48f, 1151f, 1147.79f, 1143.68f, 1144f, 1138.327f, 1140.005f, 1143.318f, 1142.311f, 1139.73f, 1141.07f, 1133.93f, 1135.434f, 1138.324f, 1134.255f, 1130.01f, 1119.86f, 1123.53f, 1130.55f, 1126f, 1125.73f, 1127.095f, 1123.44f, 1121.09f, 1114.27f, 1106.75f, 1105.61f, 1095.53f, 1105.166f, 1114f, 1113.18f, 1107.565f, 1104.21f, 1094.22f, 1093.2f, 1093.64f, 1089f, 1089f, 1089.44f, 1086.98f, 1088.93f, 1089.18f, 1087.88f, 1085.45f, 1085.69f, 1086.01f, 1085.13f, 1086f, 1086.3f, 1087.06f, 1087.99f, 1087.66f, 1092.78f, 1101.93f, 1100f, 1103.02f, 1103f, 1097.86f, 1100.59f, 1102.41f, 1100f, 1100.94f, 1099.1f, 1098.38f, 1097f, 1096.2f, 1096f, 1098f, 1102.98f, 1102.7f, 1102.5f, 1101.52f, 1100f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f, 1097.75f}).ToArray()
            };
            MLContext mlContext = new MLContext();
            
            IDataView data = mlContext.Data.LoadFromTextFile<MLModel1.ModelInput>("dataset.csv", separatorChar: ',', hasHeader: false);
            // Make a single prediction on the sample data and print results
            var model = MLModel1.RetrainPipeline(mlContext, data);
            var predictionFunction = mlContext.Model.CreatePredictionEngine<MLModel1.ModelInput, MLModel1.ModelOutput>(model);
            var prediction = predictionFunction.Predict(sampleData);
            // Console.WriteLine($"\n\nPredicted Line__1439_: {predictionResult.Score}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }
    }
}
