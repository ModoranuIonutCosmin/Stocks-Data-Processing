// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StocksProccesing.Relational.DataAccess;

namespace StocksProccesing.Relational.Migrations
{
    [DbContext(typeof(StocksMarketContext))]
    [Migration("20210822201403_RenamedStuff")]
    partial class RenamedStuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StocksProccesing.Relational.Model.Company", b =>
                {
                    b.Property<string>("Ticker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ticker");

                    b.HasIndex("Ticker")
                        .IsUnique();

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StocksProccesing.Relational.Model.StocksPriceData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyTicker")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("Prediction")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTicker");

                    b.HasIndex("Date");

                    b.HasIndex("Prediction");

                    b.ToTable("PricesData");
                });

            modelBuilder.Entity("StocksProccesing.Relational.Model.StocksPriceData", b =>
                {
                    b.HasOne("StocksProccesing.Relational.Model.Company", null)
                        .WithMany("PricesData")
                        .HasForeignKey("CompanyTicker");
                });

            modelBuilder.Entity("StocksProccesing.Relational.Model.Company", b =>
                {
                    b.Navigation("PricesData");
                });
#pragma warning restore 612, 618
        }
    }
}
